[{"D:\\resume-builder-app\\make-my-resume\\src\\index.js":"1","D:\\resume-builder-app\\make-my-resume\\src\\App.js":"2","D:\\resume-builder-app\\make-my-resume\\src\\components\\History\\History.jsx":"3","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\BuildResume.jsx":"4","D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\NavBar.jsx":"5","D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\SmallNav.jsx":"6","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\Home.jsx":"7","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\CvSlider.jsx":"8","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\FooterWithSocialLinks.jsx":"9","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ColorPicker.jsx":"10","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\PersonalDetails.jsx":"11","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\ImageCropper.jsx":"12","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeOutput.jsx":"13","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ContextAPI.jsx":"14","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Location.jsx":"15","D:\\resume-builder-app\\make-my-resume\\src\\objects\\NewUserDetailsObject.js":"16","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\WorkExperience.jsx":"17","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Skills.jsx":"18","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Education.jsx":"19","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Projects.jsx":"20","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Certifications.jsx":"21","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Others.jsx":"22","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\CustomDetails.jsx":"23","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat1.jsx":"24","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat2.jsx":"25","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat3.jsx":"26","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat4.jsx":"27"},{"size":363,"mtime":1693413965623,"results":"28","hashOfConfig":"29"},{"size":6440,"mtime":1694787829065,"results":"30","hashOfConfig":"29"},{"size":156,"mtime":1694142305631,"results":"31","hashOfConfig":"29"},{"size":4986,"mtime":1694880851007,"results":"32","hashOfConfig":"29"},{"size":1912,"mtime":1694788336166,"results":"33","hashOfConfig":"29"},{"size":1055,"mtime":1694788298066,"results":"34","hashOfConfig":"29"},{"size":1951,"mtime":1694788447900,"results":"35","hashOfConfig":"29"},{"size":1449,"mtime":1693413965623,"results":"36","hashOfConfig":"29"},{"size":2970,"mtime":1694869838674,"results":"37","hashOfConfig":"29"},{"size":2916,"mtime":1694786644035,"results":"38","hashOfConfig":"29"},{"size":3276,"mtime":1694787153709,"results":"39","hashOfConfig":"29"},{"size":698,"mtime":1693514803260,"results":"40","hashOfConfig":"29"},{"size":3719,"mtime":1694881261893,"results":"41","hashOfConfig":"29"},{"size":153,"mtime":1693501170317,"results":"42","hashOfConfig":"29"},{"size":2575,"mtime":1694787045620,"results":"43","hashOfConfig":"29"},{"size":938,"mtime":1694722262488,"results":"44","hashOfConfig":"29"},{"size":3827,"mtime":1694787377242,"results":"45","hashOfConfig":"29"},{"size":2567,"mtime":1694787330327,"results":"46","hashOfConfig":"29"},{"size":5354,"mtime":1694786967673,"results":"47","hashOfConfig":"29"},{"size":4037,"mtime":1694787206658,"results":"48","hashOfConfig":"29"},{"size":3224,"mtime":1694786831194,"results":"49","hashOfConfig":"29"},{"size":8202,"mtime":1694787131719,"results":"50","hashOfConfig":"29"},{"size":3049,"mtime":1694786928672,"results":"51","hashOfConfig":"29"},{"size":16522,"mtime":1694881475068,"results":"52","hashOfConfig":"29"},{"size":12973,"mtime":1694874026743,"results":"53","hashOfConfig":"29"},{"size":17519,"mtime":1694873936114,"results":"54","hashOfConfig":"29"},{"size":12215,"mtime":1694874102688,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1v5yyw7",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"59"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"59"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"59"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"59"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"59"},"D:\\resume-builder-app\\make-my-resume\\src\\index.js",[],[],[],"D:\\resume-builder-app\\make-my-resume\\src\\App.js",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\History\\History.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\BuildResume.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\NavBar.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\SmallNav.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\Home.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\CvSlider.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\FooterWithSocialLinks.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ColorPicker.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\PersonalDetails.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\ImageCropper.jsx",["149"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Avatar from \"react-avatar-edit\";\r\nimport UserContext from \"../ContextAPI\";\r\n\r\nconst ImageCropper = () => {\r\n  const [userImage, setUserImage] = useContext(UserContext);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const onClose = () => {\r\n    setPreview(null);\r\n  };\r\n  const onCrop = (view) => {\r\n    setPreview(view);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserImage(preview);\r\n    // Image decoder\r\n    //console.log(preview);\r\n  }, [setUserImage, preview]);\r\n\r\n  return (\r\n    <div>\r\n      <Avatar width={300} height={150} onCrop={onCrop} onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCropper;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeOutput.jsx",["150","151"],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ContextAPI.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Location.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\objects\\NewUserDetailsObject.js",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\WorkExperience.jsx",["152"],[],"import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { user_work_experience } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkExperience = ({\r\n  setWorkExperience,\r\n  workExperience,\r\n  workExpList,\r\n  setWorkExpList,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setWorkExperience((prev) => {\r\n      return { ...prev, [name]:value };\r\n    });\r\n  };\r\n\r\n  const handleExperienceInput = () => {\r\n    if (workExperience.company !== \"\" && workExperience.position !== \"\") {\r\n      setWorkExpList((prev) => {\r\n        return [...prev, workExperience];\r\n      });\r\n      setWorkExperience(user_work_experience);\r\n    }\r\n  };\r\n\r\n  const deleteWorkExperience = (index) => {\r\n    let newList = workExpList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setWorkExpList(newList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"flex flex-col items-center justify-center p-2 lg:p-8\">\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex gap-3 mb-3\">\r\n            <TextField\r\n              value={workExperience.company}\r\n              name=\"company\"\r\n              required\r\n              label=\"Company Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={workExperience.position}\r\n              name=\"position\"\r\n              required\r\n              label=\"Position\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            value={workExperience.job_summery}\r\n            name=\"job_summery\"\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Job Summery including start and end date\"\r\n            multiline\r\n            rows={2}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button\r\n            onClick={handleExperienceInput}\r\n            className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n          >\r\n            Add New Experience\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Work Experiences\r\n        </p>\r\n        {workExpList.map((workExp, index) => (\r\n          <div key={index} className=\"relative border border-blue-400 px-14 py-4 rounded m-1\">\r\n            <p>{workExp.company}</p>\r\n            <div\r\n              className=\"absolute top-1 right-1 cursor-pointer w-5\"\r\n              onClick={() => deleteWorkExperience(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-4 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/location\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/skills\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkExperience;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Skills.jsx",["153"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Skills = ({ skills, setSkills }) => {\r\n  const [mySkill, setMySkill] = useState(\"\");\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setSkills((prev) => [...prev, mySkill]);\r\n    setMySkill(\"\");\r\n  };\r\n\r\n  const deleteSkills = (index) => {\r\n    let newList = skills.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setSkills(newList);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"px-2 lg:px-4 flex flex-col lg:mt-8\">\r\n        <TextField\r\n          value={mySkill || \"\"}\r\n          fullWidth\r\n          required\r\n          label=\"Skill\"\r\n          id=\"outlined-size-medium\"\r\n          size=\"medium\"\r\n          onChange={(e) => setMySkill(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={handleClick}\r\n          className=\"text-white align-right mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n        >\r\n          Add Skill\r\n        </button>\r\n      </div>\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          My Skills\r\n        </p>\r\n        {skills.map((skill, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"border border-blue-400 rounded m-1 flex items-center justify-between gap-4 px-4 py-2\"\r\n          >\r\n            <p>{skill}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteSkills(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n        <Link\r\n          to={\"/build/work-experience\"}\r\n          className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n        >\r\n          Prev\r\n        </Link>\r\n        <Link\r\n          to={\"/build/education\"}\r\n          className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n        >\r\n          Next\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Education.jsx",["154"],[],"import React from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { user_education } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Education = ({\r\n  userEducation,\r\n  setUserEducation,\r\n  educationList,\r\n  setEducationList,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    //  e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setUserEducation((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setEducationList((prev) => {\r\n      return [...prev, userEducation];\r\n    });\r\n    setUserEducation(user_education);\r\n  };\r\n\r\n  const deleteEducation = (index) => {\r\n    let newEducationList = educationList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setEducationList(newEducationList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col items-center justify-center p-2\">\r\n        <form className=\"lg:px-8 pt-8\">\r\n          <div className=\"flex flex-col items-center justify-center\">\r\n            <div className=\"flex gap-4 mb-4\">\r\n              <TextField\r\n                value={userEducation.institution}\r\n                name=\"institution\"\r\n                required\r\n                label=\"Institution\"\r\n                id=\"outlined-size-medium\"\r\n                size=\"medium\"\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                value={userEducation.degree}\r\n                name=\"degree\"\r\n                required\r\n                label=\"Degree\"\r\n                id=\"outlined-size-medium\"\r\n                size=\"medium\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex gap-4 mb-4\">\r\n              <TextField\r\n                value={userEducation.area_of_study}\r\n                name=\"area_of_study\"\r\n                required\r\n                label=\"Area of study\"\r\n                id=\"outlined-size-medium\"\r\n                size=\"medium\"\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                value={userEducation.grade}\r\n                name=\"grade\"\r\n                label=\"Grade\"\r\n                id=\"outlined-size-medium\"\r\n                size=\"medium\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"w-full flex gap-4 mb-4\">\r\n              <div className=\"w-1/2\">\r\n                <p>Start date</p>\r\n                <input\r\n                  className=\"w-full border rounded border-gray-300 px-3 py-4\"\r\n                  value={userEducation.start_date}\r\n                  name=\"start_date\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"w-1/2\">\r\n                <p>End date</p>\r\n                <input\r\n                  className=\"w-full border rounded border-gray-300 px-3 py-4\"\r\n                  value={userEducation.end_date}\r\n                  name=\"end_date\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              value={userEducation.summery}\r\n              name=\"summery\"\r\n              fullWidth\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Summary\"\r\n              multiline\r\n              rows={4}\r\n              onChange={handleChange}\r\n            />\r\n            <button\r\n              onClick={handleClick}\r\n              className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n            >\r\n              Add New Education\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Education\r\n        </p>\r\n        {educationList.map((workExp, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"relative border border-blue-400 px-14 py-4 rounded m-1\"\r\n          >\r\n            <p>{workExp.institution}</p>\r\n            <div\r\n              className=\"absolute top-1 right-1 cursor-pointer w-5\"\r\n              onClick={() => deleteEducation(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/skills\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/projects\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Projects.jsx",["155"],[],"import React, { useState } from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport { project_details } from '../../../objects/NewUserDetailsObject';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Projects = ({ projectsList, setProjectsList }) => {\r\n    const [project, setProject] = useState(() => project_details);\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setProject((prev) =>{ \r\n            return {...prev, [name]:value}\r\n        });\r\n    }\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setProjectsList((prev) => [...prev, project]);\r\n        setProject(project_details);\r\n    }\r\n    const deleteProject = (index) => {\r\n        let newList = projectsList.filter((element, i) => {\r\n            if(i !== index) {\r\n                return element;\r\n            }\r\n        })\r\n        setProjectsList(newList);\r\n    }\r\n  return (\r\n    <div className='flex flex-col items-center justify-center'>\r\n       <form className=\"p-2 lg:p-8\">\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"w-full flex justify-between gap-2 mb-3 mt-3\">\r\n            <TextField\r\n              value={project.name}\r\n              name=\"name\"\r\n              label=\"Project Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"medium\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={project.description}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"medium\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n         <div className=\"flex flex-col w-full gap-3 mb-3 mt-3\">\r\n         <TextField\r\n            value={project.website}\r\n            name=\"website\"\r\n            fullWidth\r\n            label=\"Website/Github Link\"\r\n            id=\"outlined-size-medium\"\r\n            size=\"medium\"\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            value={project.summery}\r\n            name=\"summery\"\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Project summery\"\r\n            multiline\r\n            rows={3}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button\r\n            onClick={handleClick}\r\n            className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n          >\r\n            Add New Project\r\n          </button>\r\n         </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Projects\r\n        </p>\r\n\r\n        {projectsList.map((project, index) => (\r\n          <div key={index} className=\"relative border border-blue-400 px-14 py-4 rounded m-1\">\r\n            <p>{project.name}</p>\r\n            <div\r\n              className=\"absolute top-1 right-1 cursor-pointer w-5\"\r\n              onClick={() => deleteProject(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/education\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/certifications\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Certifications.jsx",["156"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { user_certificate } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Certifications = ({certificationList, setCertificationList}) => {\r\n  const [myCertificate, setMyCertificate] = useState(() => user_certificate)\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setMyCertificate((prev) => {\r\n      return {...prev, [name]:value};\r\n    })\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setCertificationList((prev) => [...prev, myCertificate]);\r\n    setMyCertificate(user_certificate);\r\n  };\r\n\r\n  const deleteSkills = (index) => {\r\n      let newList = certificationList.filter( function (element, i) {\r\n          if(i !== index) {\r\n            return element;\r\n          }\r\n      })\r\n      setCertificationList(newList);\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center gap-4 p-4 lg:p-8 max-lg:mt-2\">\r\n      <TextField\r\n        fullWidth\r\n        value={myCertificate.name}\r\n        name=\"name\"\r\n        label=\"Certificate Name\"\r\n        id=\"outlined-size-medium\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        value={myCertificate.description}\r\n        name=\"description\"\r\n        label=\"Description\"\r\n        id=\"outlined-size-medium\"\r\n        multiline\r\n        rows={3}\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button\r\n        onClick={handleClick}\r\n        className=\"text-white align-right mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n      >\r\n        Add Certificate\r\n      </button>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Certificates\r\n        </p>\r\n        {certificationList.map((certificate, index) => (\r\n          <div key={index} className=\"border border-blue-400 rounded m-1 flex items-center justify-between gap-4 px-4 py-2\">\r\n            <p>{certificate.name}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteSkills(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/projects\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/others\"}\r\n            className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Others.jsx",["157","158","159"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {\r\n  user_language,\r\n  user_award,\r\n} from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Others = ({\r\n  languageList,\r\n  setLanguageList,\r\n  awardList,\r\n  setAwardList,\r\n  hobbies,\r\n  setHobbies,\r\n}) => {\r\n  const [language, setLanguage] = useState(user_language);\r\n  const [award, setAward] = useState(user_award);\r\n  const [userHobby, setUserHobby] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLanguage((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n\r\n    setAward((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n  const handleLanguage = (e) => {\r\n    e.preventDefault();\r\n    setLanguageList((prev) => [...prev, language]);\r\n    setLanguage(user_language);\r\n  };\r\n  const deleteLanguage = (index) => {\r\n    let newList = languageList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setLanguageList(newList);\r\n  };\r\n\r\n  const handleAwards = (e) => {\r\n    e.preventDefault();\r\n    setAwardList((prev) => [...prev, award]);\r\n    setAward(user_award);\r\n  };\r\n  const deleteAward = (index) => {\r\n    let newList = awardList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setAwardList(newList);\r\n  };\r\n\r\n  const handleHobbies = (e) => {\r\n    e.preventDefault();\r\n    setHobbies((prev) => [...prev, userHobby]);\r\n    setUserHobby(\"\");\r\n  };\r\n\r\n  const deleteHobby = (index) => {\r\n    let newList = hobbies.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setHobbies(newList);\r\n  };\r\n  return (\r\n    <div className=\"p-2 max-lg:m-2 lg:p-8\">\r\n      <div>\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Languages\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex w-full items-center justify-between gap-3\">\r\n            <TextField\r\n              value={language.name}\r\n              name=\"name\"\r\n              required\r\n              label=\"Language Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={language.level}\r\n              name=\"level\"\r\n              required\r\n              label=\"Level Out Of 10\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleLanguage}\r\n            className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n          >\r\n            Add New Language\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {languageList.map((language, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-blue-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{language.name}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteLanguage(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 lg:mt-6\">\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Awards\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex flex-col w-full items-center justify-center gap-3\">\r\n            <TextField\r\n              value={award.award_name}\r\n              name=\"award_name\"\r\n              required\r\n              fullWidth\r\n              label=\"Award Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={award.description}\r\n              name=\"description\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={2}\r\n              label=\"Description\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleAwards}\r\n            className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n          >\r\n            Add New Experience\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {awardList.map((award, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-blue-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{award.award_name}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteAward(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 lg:mt-6\">\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Hobbies and Interests\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n          <TextField\r\n            value={userHobby}\r\n            required\r\n            fullWidth\r\n            label=\"Hobby or Intrest\"\r\n            id=\"outlined-size-medium\"\r\n            size=\"small\"\r\n            onChange={(e) => setUserHobby(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={handleHobbies}\r\n            className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n          >\r\n            Add New Hobby\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {hobbies.map((hobby, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-blue-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{hobby}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteHobby(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-4\">\r\n        <Link\r\n          to={\"/build/certifications\"}\r\n          className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n        >\r\n          Prev\r\n        </Link>\r\n        <Link\r\n          to={\"/build/custom-details\"}\r\n          className=\"text-white bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n        >\r\n          Next\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Others;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\CustomDetails.jsx",["160"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { new_details } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomDetails = ({ newDetails, setNewDetails }) => {\r\n  const [details, setDetails] = useState(new_details);\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDetails((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setNewDetails((prev) => [...prev, details]);\r\n    setDetails(new_details);\r\n  };\r\n\r\n  const deleteDetails = (index) => {\r\n    let newList = newDetails.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setNewDetails(newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-2 lg:p-8\">\r\n      <form className=\"w-full flex gap-3 flex-col items-center justify-center\">\r\n        <TextField\r\n          required\r\n          value={details.title}\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          id=\"outlined-size-medium\"\r\n          size=\"medium\"\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          value={details.description}\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          id=\"outlined-size-medium\"\r\n          size=\"medium\"\r\n          multiline\r\n          rows={2}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          onClick={handleClick}\r\n          className=\"text-white mt-4 text-center bg-blue-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-blue-500\"\r\n        >\r\n          Add Details\r\n        </button>\r\n      </form>\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Other Details\r\n        </p>\r\n        {newDetails.map((details, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"border mt-1 border-blue-400 px-4 py-2 rounded flex gap-4 items-center justify-center\"\r\n          >\r\n            <p>{details.title}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteDetails(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"relative w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n        <Link\r\n          to={\"/build/others\"}\r\n          className=\"text-white absolute left-0 bg-blue-400 px-6 py-2 rounded hover:bg-blue-500 font-semibold\"\r\n        >\r\n          Prev\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomDetails;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat1.jsx",["161","162"],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat2.jsx",["163"],[],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../ContextAPI\";\r\n\r\nconst ResumeFormat2 = ({\r\n  personalDetails,\r\n  userLocation,\r\n  workExpList,\r\n  skills,\r\n  educationList,\r\n  projectsList,\r\n  certificationList,\r\n  languageList,\r\n  awardList,\r\n  hobbies,\r\n  newDetails,\r\n}) => {\r\n  const [image, setImage] = useContext(UserContext);\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div className=\"flex flex-col border rounded-lg\">\r\n      <div className=\"py-3 border-b-2 border-gray-600\">\r\n          {image !== null && (\r\n            <div className={`flex items-center px-2 lg:px-4`}>\r\n              <div className=\"flex items-end justify-start w-2/12\">\r\n                <img\r\n                  src={\r\n                    image ||\r\n                    \"https://static.vecteezy.com/system/resources/previews/002/318/271/non_2x/user-profile-icon-free-vector.jpg\"\r\n                  }\r\n                  alt=\"\"\r\n                  className=\"w-28 h-28 border rounded-full\"\r\n                />\r\n              </div>\r\n              <div className=\"w-10/12 flex flex-col\">\r\n                <p className=\"text-xl lg:text-3xl font-medium\">\r\n                  {personalDetails.fullName}\r\n                </p>\r\n\r\n                <div className=\"text-sm flex flex-col mt-2\">\r\n                  <p>{`${personalDetails.headLine} | ${personalDetails.email}`}</p>\r\n                  <p>\r\n                    Address:{\" \"}\r\n                    {`${userLocation.address}, ${userLocation.city}, ${userLocation.region}, ${userLocation.country}, ${userLocation.postal_code} | ${personalDetails.dob} | ${personalDetails.phone}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {image === null && (\r\n            <div>\r\n              <p className=\"text-xl lg:text-3xl font-medium text-center\">\r\n                {personalDetails.fullName}\r\n              </p>\r\n\r\n              <div className=\"text-sm flex flex-col items-center justify-center mt-2\">\r\n                <p>{`${personalDetails.headLine} | ${personalDetails.email}`}</p>\r\n                <p>\r\n                  Address:{\" \"}\r\n                  {`${userLocation.address}, ${userLocation.city}, ${userLocation.region}, ${userLocation.country}, ${userLocation.postal_code} | ${personalDetails.dob} | ${personalDetails.phone}`}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div\r\n            className={`w-1/3 h-[1122px] rounded-l-lg flex flex-col p-2 lg:pl-6 lg:pr-4`}\r\n          >\r\n            {/* Education */}\r\n            <div className=\"mt-2\">\r\n              {educationList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500\">EDUCATION</p>\r\n                  <div>\r\n                    {educationList.map((education) => {\r\n                      return (\r\n                        <div>\r\n                          <p className=\"font-medium text-sm lg:text-base\">\r\n                            {education.institution}\r\n                          </p>\r\n                          <p className=\"text-xs font-medium text-gray-500\">{`(${education.start_date} to ${education.end_date})`}</p>\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <p className=\"text-xs font-medium text-gray-500\">{`${education.degree}, ${education.area_of_study},`}</p>\r\n                            {education.grade !== \"\" && (\r\n                              <p className=\"text-xs font-semibold text-gray-500\">\r\n                                Grade: {education.grade}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                          <p className=\"text-sm mt-1\">{education.summery}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Certification */}\r\n            <div>\r\n              {certificationList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2 mb-1\">\r\n                    CERTIFICATION\r\n                  </p>\r\n                  <div className=\"flex flex-col\">\r\n                    {certificationList.map((certificate) => {\r\n                      return (\r\n                        <>\r\n                          <p className=\"text-base font-medium\">\r\n                            {certificate.name}\r\n                          </p>\r\n                          <p className=\"text-sm pb-1\">\r\n                            {certificate.description}\r\n                          </p>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Skills */}\r\n            <div>\r\n              {skills.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                    SKILLS\r\n                  </p>\r\n                  <div className=\"grid grid-cols-2\">\r\n                    {skills.map((skill) => {\r\n                      return (\r\n                        <p className=\"text-sm font-medium pt-2\">{skill}</p>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Awards */}\r\n            <div>\r\n              {awardList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                    AWARDS\r\n                  </p>\r\n                  <div className=\"mt-1 flex flex-col\">\r\n                    {awardList.map((award) => {\r\n                      return (\r\n                        <div className=\"flex justify-center flex-col\">\r\n                          <p className=\"text-sm font-medium\">\r\n                            {award.award_name}\r\n                          </p>\r\n                          {award.description !== \"\" && (\r\n                            <p className=\"text-sm\">{award.description}</p>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Languages */}\r\n            <div>\r\n              {languageList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                    LANGUAGES\r\n                  </p>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2\">\r\n                    {languageList.map((language) => {\r\n                      return (\r\n                        <div className=\"flex gap-1 mt-2 items-center\">\r\n                          <p className=\"text-sm font-medium\">{language.name}</p>\r\n                          {parseInt(language.level) < 5 && (\r\n                            <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                              Basic\r\n                            </p>\r\n                          )}\r\n                          {parseInt(language.level) > 5 &&\r\n                            parseInt(language.level) < 9 && (\r\n                              <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                                Average\r\n                              </p>\r\n                            )}\r\n                          {parseInt(language.level) >= 9 && (\r\n                            <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                              Excellent\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-2/3 flex flex-col p-2 lg:pr-6 lg:pl-4\">\r\n            {personalDetails.summery !== \"\" && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500\">\r\n                  PERSONAL SUMMERY\r\n                </p>\r\n                <p className=\"text-xs lg:text-sm text-black mt-1\">\r\n                  {personalDetails.summery}\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Work Experience */}\r\n            <div>\r\n              {workExpList.length !== 0 && (\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm lg:text-lg text-gray-500\">\r\n                    WORK EXPERIENCE\r\n                  </p>\r\n                  <div>\r\n                    {workExpList.map((work) => {\r\n                      return (\r\n                        <div>\r\n                          <div className=\"flex gap-1 items-center mt-1\">\r\n                            <p className=\"text-sm lg:text-base font-semibold\">\r\n                              {work.company},\r\n                            </p>\r\n                            <p className=\"text-sm font-semibold\">\r\n                              {work.position}\r\n                            </p>\r\n                          </div>\r\n                          <p className=\"text-sm mt-1\">{work.job_summery}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Project */}\r\n            <div>\r\n              {projectsList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                    PROJECTS\r\n                  </p>\r\n                  <div>\r\n                    {projectsList.map((project) => {\r\n                      return (\r\n                        <div>\r\n                          <p className=\"font-medium text-base\">\r\n                            {project.name}\r\n                          </p>\r\n                          <p className=\"text-xs font-semibold text-gray-500\">\r\n                            {project.description}\r\n                          </p>\r\n                          <p className=\"text-sm mt-1\">{project.summery}</p>\r\n                          {project.website !== \"\" && (\r\n                            <div className=\"flex gap-1 items-center text-gray-500 text-sm font-medium py-1\">\r\n                              <svg\r\n                                width=\"20px\"\r\n                                height=\"20px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                              >\r\n                                <path\r\n                                  d=\"M7 8L3 11.6923L7 16M17 8L21 11.6923L17 16M14 4L10 20\"\r\n                                  stroke=\"#000000\"\r\n                                  stroke-width=\"2\"\r\n                                  stroke-linecap=\"round\"\r\n                                  stroke-linejoin=\"round\"\r\n                                />\r\n                              </svg>\r\n                              <p>{project.website}</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Extra Details */}\r\n            <div>\r\n              {newDetails.length !== 0 && (\r\n                <div>\r\n                  <div className=\"flex flex-col\">\r\n                    {newDetails.map((details) => {\r\n                      return (\r\n                        <div className=\"flex flex-col justify-center\">\r\n                          {details.title && (\r\n                            <p className=\"text-sm lg:text-lg text-gray-500 mt-2 mb-1\">\r\n                              {details.title.toUpperCase()}\r\n                            </p>\r\n                          )}\r\n                          <p className=\"text-sm\">{details.description}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Hobbies */}\r\n            <div>\r\n              {hobbies.length !== 0 && (\r\n                <div>\r\n                  <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                    HOBBIES\r\n                  </p>\r\n                  <div className=\"grid grid-cols-4 text-sm\">\r\n                    {hobbies.map((hobby) => (\r\n                      <p>{hobby}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeFormat2;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat3.jsx",["164"],[],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../ContextAPI\";\r\n\r\nconst ResumeFormat3 = ({\r\n  personalDetails,\r\n  userLocation,\r\n  workExpList,\r\n  skills,\r\n  educationList,\r\n  projectsList,\r\n  certificationList,\r\n  languageList,\r\n  awardList,\r\n  hobbies,\r\n  newDetails,\r\n  background,\r\n}) => {\r\n  const [image, setImage] = useContext(UserContext);\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div className=\"flex flex-col border rounded-lg\">\r\n        {image !== null && (\r\n          <div className={`flex items-center ${background} p-4`}>\r\n            <div className=\"flex items-end justify-start w-2/12\">\r\n              <img\r\n                src={\r\n                  image ||\r\n                  \"https://static.vecteezy.com/system/resources/previews/002/318/271/non_2x/user-profile-icon-free-vector.jpg\"\r\n                }\r\n                alt=\"\"\r\n                className=\"w-28 h-28 border rounded-full\"\r\n              />\r\n            </div>\r\n            <div className=\"w-10/12\">\r\n              <p className=\"text-xl lg:text-3xl font-medium\">\r\n                {personalDetails.fullName}\r\n              </p>\r\n              <p className=\"text-sm lg:text-lg\">{personalDetails.headLine}</p>\r\n              <p className=\"text-xs lg:text-sm\">{personalDetails.summery}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {image === null && (\r\n          <div\r\n            className={`w-full flex flex-col items-center justify-center p-2 lg:px-6 ${background}`}\r\n          >\r\n            <p className=\"text-xl lg:text-3xl font-medium\">\r\n              {personalDetails.fullName}\r\n            </p>\r\n            <p className=\"text-sm lg:text-lg\">{personalDetails.headLine}</p>\r\n            <p className=\"text-xs lg:text-sm text-center\">{personalDetails.summery}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex h-[1122px]\">\r\n          <div\r\n            className={`w-1/2 h-full rounded-l-lg flex flex-col p-2 lg:pl-6 lg:pr-4`}\r\n          >\r\n            {/* Address */}\r\n            <div className=\"w-full\">\r\n              <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                ADDRESS\r\n              </p>\r\n              <div className=\"my-1 gap-1 text-sm\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12 21C15.5 17.4 19 14.1764 19 10.2C19 6.22355 15.866 3 12 3C8.13401 3 5 6.22355 5 10.2C5 14.1764 8.5 17.4 12 21Z\"\r\n                      stroke=\"#000000\"\r\n                      stroke-width=\"2\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                    />\r\n                    <path\r\n                      d=\"M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z\"\r\n                      stroke=\"#000000\"\r\n                      stroke-width=\"2\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                  <p className=\"text-sm\">{`${userLocation.address} ${userLocation.city} ${userLocation.region} ${userLocation.country} ${userLocation.postal_code}`}</p>\r\n                </div>\r\n\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg\r\n                    fill=\"#000000\"\r\n                    width=\"16px\"\r\n                    height=\"16px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path d=\"M3,22H21a1,1,0,0,0,1-1V6a1,1,0,0,0-1-1H17V3a1,1,0,0,0-2,0V5H9V3A1,1,0,0,0,7,3V5H3A1,1,0,0,0,2,6V21A1,1,0,0,0,3,22ZM4,7H20v3H4Zm0,5H20v8H4Z\" />\r\n                  </svg>\r\n                  <div className=\"flex flex-col\">\r\n                    <p>{personalDetails.dob}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg\r\n                    width=\"16px\"\r\n                    height=\"16px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M21 8L17.4392 9.97822C15.454 11.0811 14.4614 11.6326 13.4102 11.8488C12.4798 12.0401 11.5202 12.0401 10.5898 11.8488C9.53864 11.6326 8.54603 11.0811 6.5608 9.97822L3 8M6.2 19H17.8C18.9201 19 19.4802 19 19.908 18.782C20.2843 18.5903 20.5903 18.2843 20.782 17.908C21 17.4802 21 16.9201 21 15.8V8.2C21 7.0799 21 6.51984 20.782 6.09202C20.5903 5.71569 20.2843 5.40973 19.908 5.21799C19.4802 5 18.9201 5 17.8 5H6.2C5.0799 5 4.51984 5 4.09202 5.21799C3.71569 5.40973 3.40973 5.71569 3.21799 6.09202C3 6.51984 3 7.07989 3 8.2V15.8C3 16.9201 3 17.4802 3.21799 17.908C3.40973 18.2843 3.71569 18.5903 4.09202 18.782C4.51984 19 5.07989 19 6.2 19Z\"\r\n                      stroke=\"#000000\"\r\n                      stroke-width=\"2\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                  <p>{personalDetails.email}</p>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg\r\n                    fill=\"#000000\"\r\n                    width=\"16px\"\r\n                    height=\"16px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path d=\"M1.277,8.858C2.606,14.138,9.863,21.4,15.142,22.723a8.938,8.938,0,0,0,2.18.274,8.54,8.54,0,0,0,4.006-1,3.11,3.11,0,0,0,.764-4.951h0L20.006,14.96a3.111,3.111,0,0,0-3.444-.651,4.859,4.859,0,0,0-1.471.987c-.178.177-.506.205-.977.077A9.981,9.981,0,0,1,8.626,9.886c-.126-.471-.1-.8.078-.977a4.864,4.864,0,0,0,.988-1.473,3.112,3.112,0,0,0-.651-3.442L6.955,1.909A3.065,3.065,0,0,0,4.3,1.035,3.1,3.1,0,0,0,2,2.672,8.58,8.58,0,0,0,1.277,8.858ZM3.773,3.6A1.115,1.115,0,0,1,4.6,3.013,1.044,1.044,0,0,1,4.767,3a1.088,1.088,0,0,1,.774.323L7.626,5.408a1.1,1.1,0,0,1,.239,1.213A2.9,2.9,0,0,1,7.29,7.5,2.817,2.817,0,0,0,6.7,10.4c.722,2.7,4.205,6.179,6.9,6.9a2.821,2.821,0,0,0,2.907-.6,2.906,2.906,0,0,1,.874-.576,1.1,1.1,0,0,1,1.214.239l2.085,2.085a1.089,1.089,0,0,1,.31.942,1.114,1.114,0,0,1-.591.826,6.517,6.517,0,0,1-4.766.556C11.089,19.641,4.36,12.912,3.216,8.37A6.53,6.53,0,0,1,3.773,3.6Z\" />\r\n                  </svg>\r\n                  <div className=\"flex flex-col\">\r\n                    <p>{personalDetails.phone}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Education */}\r\n            <div className=\"mt-2\">\r\n              {educationList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    EDUCATION\r\n                  </p>\r\n                  <div>\r\n                    {educationList.map((education) => {\r\n                      return (\r\n                        <div>\r\n                          <div className=\"flex justify-between\">\r\n                            <p className=\"font-semibold text-base lg:text-lg\">\r\n                              {education.institution}\r\n                            </p>\r\n                            <p className=\"text-xs font-semibold text-gray-500\">{`(${education.start_date} to ${education.end_date})`}</p>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <p className=\"text-sm font-medium text-gray-500\">{`${education.degree}, ${education.area_of_study}`}</p>\r\n                            {education.grade !== \"\" && (\r\n                              <p className=\"text-xs font-semibold text-gray-500\">\r\n                                Grade: {education.grade}\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                          <p className=\"text-sm mt-1\">{education.summery}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Skills */}\r\n            <div>\r\n              {skills.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    SKILLS\r\n                  </p>\r\n                  <div className=\"grid grid-cols-2 lg:grid-cols-3\">\r\n                    {skills.map((skill) => {\r\n                      return (\r\n                        <p className=\"text-sm font-medium w-1/2 pt-2\">\r\n                          {skill}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Certification */}\r\n            <div>\r\n              {certificationList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    CERTIFICATION\r\n                  </p>\r\n                  <div className=\"pt-2 flex flex-col\">\r\n                    {certificationList.map((certificate) => {\r\n                      return (\r\n                        <>\r\n                          <p className=\"text-base font-medium\">\r\n                            {certificate.name}\r\n                          </p>\r\n                          <p className=\"text-sm pb-1\">\r\n                            {certificate.description}\r\n                          </p>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Languages */}\r\n            <div>\r\n              {languageList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    LANGUAGES\r\n                  </p>\r\n                  <div className=\"pt-2 grid grid-cols-1 lg:grid-cols-2\">\r\n                    {languageList.map((language) => {\r\n                      return (\r\n                        <div className=\"flex gap-1 items-center\">\r\n                          <p className=\"text-base font-medium\">\r\n                            {language.name}\r\n                          </p>\r\n                          {parseInt(language.level) < 5 && (\r\n                            <p className=\"text-xs font-semibold bg-blue-300 px-1 pb-0.5 rounded\">\r\n                              Basic\r\n                            </p>\r\n                          )}\r\n                          {parseInt(language.level) > 5 &&\r\n                            parseInt(language.level) < 9 && (\r\n                              <p className=\"text-xs font-semibold bg-blue-300 px-1 pb-0.5 rounded\">\r\n                                Average\r\n                              </p>\r\n                            )}\r\n                          {parseInt(language.level) >= 9 && (\r\n                            <p className=\"text-xs font-semibold bg-blue-300 px-1 pb-0.5 rounded\">\r\n                              Excellent\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Awards */}\r\n            <div>\r\n              {awardList.length !== 0 && (\r\n                <div className=\"mt-1\">\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    AWARDS\r\n                  </p>\r\n                  <div className=\"pt-2 flex flex-col\">\r\n                    {awardList.map((award) => {\r\n                      return (\r\n                        <div className=\"flex justify-center flex-col\">\r\n                          <p className=\"text-base font-medium\">\r\n                            {award.award_name}\r\n                          </p>\r\n                          {award.description !== \"\" && (\r\n                            <p className=\"text-sm\">{award.description}</p>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Hobbies */}\r\n            <div className=\"mt-2\">\r\n              {hobbies.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    HOBBIES\r\n                  </p>\r\n                  <div className=\"grid grid-cols-4 text-sm\">\r\n                    {hobbies.map((hobby) => (\r\n                      <p>{hobby}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"w-1/2 h-full flex flex-col p-2 lg:pr-6 lg:pl-4\">\r\n            {/* Work Experience */}\r\n            <div>\r\n              {workExpList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    WORK EXPERIENCE\r\n                  </p>\r\n                  <div>\r\n                    {workExpList.map((work) => {\r\n                      return (\r\n                        <div>\r\n                          <p className=\"text-base lg:text-lg font-semibold\">\r\n                            {work.company}\r\n                          </p>\r\n                          <p className=\"text-sm font-medium lg:text-base text-gray-500\">\r\n                            {work.position}\r\n                          </p>\r\n                          <p className=\"text-sm mt-1\">{work.job_summery}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Project */}\r\n            <div className=\"mt-2\">\r\n              {projectsList.length !== 0 && (\r\n                <div>\r\n                  <p className=\"font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                    PROJECTS\r\n                  </p>\r\n                  <div>\r\n                    {projectsList.map((project) => {\r\n                      return (\r\n                        <div>\r\n                          <p className=\"font-semibold text-base lg:text-lg\">\r\n                            {project.name}\r\n                          </p>\r\n                          <p className=\"text-xs font-semibold text-gray-500\">\r\n                            {project.description}\r\n                          </p>\r\n                          <p className=\"text-sm mt-1\">{project.summery}</p>\r\n                          {project.website !== \"\" && (\r\n                            <div className=\"flex gap-1 items-center text-blue-500 text-xs font-medium py-1\">\r\n                              <svg\r\n                                width=\"20px\"\r\n                                height=\"20px\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                              >\r\n                                <path\r\n                                  d=\"M7 8L3 11.6923L7 16M17 8L21 11.6923L17 16M14 4L10 20\"\r\n                                  stroke=\"#000000\"\r\n                                  stroke-width=\"2\"\r\n                                  stroke-linecap=\"round\"\r\n                                  stroke-linejoin=\"round\"\r\n                                />\r\n                              </svg>\r\n                              <p>{project.website}</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Extra Details */}\r\n            <div>\r\n              {newDetails.length !== 0 && (\r\n                <div>\r\n                  <div className=\"flex flex-col\">\r\n                    {newDetails.map((details) => {\r\n                      return (\r\n                        <div className=\"flex flex-col justify-center\">\r\n                          {details.title && (\r\n                            <p className=\"mt-2 mb-1 font-semibold text-sm lg:text-base text-blue-400 border-b-2 border-blue-400\">\r\n                              {details.title.toUpperCase()}\r\n                            </p>\r\n                          )}\r\n                          <p className=\"text-sm\">{details.description}</p>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeFormat3;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat4.jsx",["165"],[],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../ContextAPI\";\r\n\r\nconst ResumeFormat4 = ({\r\n  personalDetails,\r\n  userLocation,\r\n  workExpList,\r\n  skills,\r\n  educationList,\r\n  projectsList,\r\n  certificationList,\r\n  languageList,\r\n  awardList,\r\n  hobbies,\r\n  newDetails,\r\n}) => {\r\n  const [image, setImage] = useContext(UserContext);\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div className=\"flex flex-col border rounded-lg\">\r\n        <div className=\"py-3 border-b-2 border-gray-600\">\r\n          {image !== null && (\r\n            <div className={`flex items-center px-2 lg:px-4`}>\r\n              <div className=\"flex items-end justify-start w-2/12\">\r\n                <img\r\n                  src={\r\n                    image ||\r\n                    \"https://static.vecteezy.com/system/resources/previews/002/318/271/non_2x/user-profile-icon-free-vector.jpg\"\r\n                  }\r\n                  alt=\"\"\r\n                  className=\"w-28 h-28 border rounded-full\"\r\n                />\r\n              </div>\r\n              <div className=\"w-10/12 flex flex-col\">\r\n                <p className=\"text-xl lg:text-3xl font-medium\">\r\n                  {personalDetails.fullName}\r\n                </p>\r\n\r\n                <div className=\"text-sm flex flex-col mt-2\">\r\n                  <p>{`${personalDetails.headLine} | ${personalDetails.email}`}</p>\r\n                  <p>\r\n                    Address:{\" \"}\r\n                    {`${userLocation.address}, ${userLocation.city}, ${userLocation.region}, ${userLocation.country}, ${userLocation.postal_code} | ${personalDetails.dob} | ${personalDetails.phone}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {image === null && (\r\n            <div>\r\n              <p className=\"text-xl lg:text-3xl font-medium text-center\">\r\n                {personalDetails.fullName}\r\n              </p>\r\n\r\n              <div className=\"text-sm flex flex-col items-center justify-center mt-2\">\r\n                <p>{`${personalDetails.headLine} | ${personalDetails.email}`}</p>\r\n                <p>\r\n                  Address:{\" \"}\r\n                  {`${userLocation.address}, ${userLocation.city}, ${userLocation.region}, ${userLocation.country}, ${userLocation.postal_code} | ${personalDetails.dob} | ${personalDetails.phone}`}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex flex-col px-4 lg:px-6 h-[1122px]\">\r\n          {personalDetails.summery !== \"\" && (\r\n            <div>\r\n              <p className=\"text-sm lg:text-lg text-gray-500\">\r\n                PERSONAL SUMMERY\r\n              </p>\r\n              <p className=\"text-xs lg:text-sm text-black mt-1\">\r\n                {personalDetails.summery}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {/* Work Experience */}\r\n          <div>\r\n            {workExpList.length !== 0 && (\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm lg:text-lg text-gray-500\">\r\n                  WORK EXPERIENCE\r\n                </p>\r\n                <div>\r\n                  {workExpList.map((work) => {\r\n                    return (\r\n                      <div>\r\n                        <div className=\"flex gap-1 items-center mt-1\">\r\n                          <p className=\"text-sm lg:text-base font-semibold\">\r\n                            {work.company},\r\n                          </p>\r\n                          <p className=\"text-sm font-semibold\">\r\n                            {work.position}\r\n                          </p>\r\n                        </div>\r\n                        <p className=\"text-sm mt-1\">{work.job_summery}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Project */}\r\n          <div>\r\n            {projectsList.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                  PROJECTS\r\n                </p>\r\n                <div>\r\n                  {projectsList.map((project) => {\r\n                    return (\r\n                      <div>\r\n                        <p className=\"font-medium text-base\">{project.name}</p>\r\n                        <p className=\"text-xs font-semibold text-gray-500\">\r\n                          {project.description}\r\n                        </p>\r\n                        <p className=\"text-sm mt-1\">{project.summery}</p>\r\n                        {project.website !== \"\" && (\r\n                          <div className=\"flex gap-1 items-center text-gray-500 text-sm font-medium py-1\">\r\n                            <svg\r\n                              width=\"20px\"\r\n                              height=\"20px\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <path\r\n                                d=\"M7 8L3 11.6923L7 16M17 8L21 11.6923L17 16M14 4L10 20\"\r\n                                stroke=\"#000000\"\r\n                                stroke-width=\"2\"\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                              />\r\n                            </svg>\r\n                            <p>{project.website}</p>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Education */}\r\n          <div className=\"mt-2\">\r\n            {educationList.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500\">EDUCATION</p>\r\n                <div>\r\n                  {educationList.map((education) => {\r\n                    return (\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <p className=\"font-medium text-sm lg:text-base\">\r\n                            {education.institution}\r\n                          </p>\r\n                          <p className=\"text-xs font-medium text-gray-500\">{`(${education.start_date} to ${education.end_date})`}</p>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <p className=\"text-xs font-medium text-gray-500\">{`${education.degree}, ${education.area_of_study},`}</p>\r\n                          {education.grade !== \"\" && (\r\n                            <p className=\"text-xs font-semibold text-gray-500\">\r\n                              Grade: {education.grade}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        <p className=\"text-sm mt-1\">{education.summery}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Certification */}\r\n          <div>\r\n            {certificationList.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                  CERTIFICATION\r\n                </p>\r\n                <div className=\"flex flex-col\">\r\n                  {certificationList.map((certificate) => {\r\n                    return (\r\n                      <>\r\n                        <p className=\"text-base font-medium\">\r\n                          {certificate.name}\r\n                        </p>\r\n                        <p className=\"text-sm pb-1\">\r\n                          {certificate.description}\r\n                        </p>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Skills */}\r\n          <div>\r\n            {skills.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">SKILLS</p>\r\n                <div className=\"grid grid-cols-5 lg:grid-cols-7\">\r\n                  {skills.map((skill) => {\r\n                    return <p className=\"text-sm font-medium pt-2\">{skill}</p>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Awards */}\r\n          <div>\r\n            {awardList.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">AWARDS</p>\r\n                <div className=\"mt-1 flex flex-col\">\r\n                  {awardList.map((award) => {\r\n                    return (\r\n                      <div className=\"flex justify-center flex-col\">\r\n                        <p className=\"text-sm font-medium\">\r\n                          {award.award_name}\r\n                        </p>\r\n                        {award.description !== \"\" && (\r\n                          <p className=\"text-sm\">{award.description}</p>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Languages */}\r\n          <div>\r\n            {languageList.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">\r\n                  LANGUAGES\r\n                </p>\r\n                <div className=\"grid grid-cols-2 lg:grid-cols-4\">\r\n                  {languageList.map((language) => {\r\n                    return (\r\n                      <div className=\"flex gap-1 mt-2 items-center\">\r\n                        <p className=\"text-sm font-medium\">{language.name}</p>\r\n                        {parseInt(language.level) < 5 && (\r\n                          <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                            Basic\r\n                          </p>\r\n                        )}\r\n                        {parseInt(language.level) > 5 &&\r\n                          parseInt(language.level) < 9 && (\r\n                            <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                              Average\r\n                            </p>\r\n                          )}\r\n                        {parseInt(language.level) >= 9 && (\r\n                          <p className=\"text-xs font-medium bg-gray-200 px-1 pb-0.5 rounded\">\r\n                            Excellent\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Extra Details */}\r\n          <div>\r\n            {newDetails.length !== 0 && (\r\n              <div>\r\n                <div className=\"flex flex-col\">\r\n                  {newDetails.map((details) => {\r\n                    return (\r\n                      <div className=\"flex flex-col justify-center\">\r\n                        {details.title && (\r\n                          <p className=\"text-sm lg:text-lg text-gray-500 mt-2 mb-1\">\r\n                            {details.title.toUpperCase()}\r\n                          </p>\r\n                        )}\r\n                        <p className=\"text-sm\">{details.description}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Hobbies */}\r\n          <div>\r\n            {hobbies.length !== 0 && (\r\n              <div>\r\n                <p className=\"text-sm lg:text-lg text-gray-500 mt-2\">HOBBIES</p>\r\n                <div className=\"grid grid-cols-4 lg:grid-cols-7 text-sm\">\r\n                  {hobbies.map((hobby) => (\r\n                    <p>{hobby}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeFormat4;\r\n",{"ruleId":"166","severity":1,"message":"167","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":19},{"ruleId":"166","severity":1,"message":"171","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":29,"column":51,"nodeType":"174","messageId":"175","endLine":29,"endColumn":53},{"ruleId":"172","severity":1,"message":"173","line":14,"column":46,"nodeType":"174","messageId":"175","endLine":14,"endColumn":48},{"ruleId":"172","severity":1,"message":"173","line":29,"column":62,"nodeType":"174","messageId":"175","endLine":29,"endColumn":64},{"ruleId":"172","severity":1,"message":"173","line":20,"column":56,"nodeType":"174","messageId":"175","endLine":20,"endColumn":58},{"ruleId":"172","severity":1,"message":"176","line":21,"column":47,"nodeType":"177","messageId":"175","endLine":21,"endColumn":56},{"ruleId":"172","severity":1,"message":"173","line":36,"column":52,"nodeType":"174","messageId":"175","endLine":36,"endColumn":54},{"ruleId":"172","severity":1,"message":"173","line":50,"column":49,"nodeType":"174","messageId":"175","endLine":50,"endColumn":51},{"ruleId":"172","severity":1,"message":"173","line":65,"column":47,"nodeType":"174","messageId":"175","endLine":65,"endColumn":49},{"ruleId":"172","severity":1,"message":"173","line":21,"column":50,"nodeType":"174","messageId":"175","endLine":21,"endColumn":52},{"ruleId":"166","severity":1,"message":"178","line":1,"column":29,"nodeType":"168","messageId":"169","endLine":1,"endColumn":37},{"ruleId":"166","severity":1,"message":"179","line":18,"column":17,"nodeType":"168","messageId":"169","endLine":18,"endColumn":25},{"ruleId":"166","severity":1,"message":"179","line":17,"column":17,"nodeType":"168","messageId":"169","endLine":17,"endColumn":25},{"ruleId":"166","severity":1,"message":"179","line":18,"column":17,"nodeType":"168","messageId":"169","endLine":18,"endColumn":25},{"ruleId":"166","severity":1,"message":"179","line":17,"column":17,"nodeType":"168","messageId":"169","endLine":17,"endColumn":25},"no-unused-vars","'userImage' is assigned a value but never used.","Identifier","unusedVar","'html2canvas' is defined but never used.","'jsPDF' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","'useState' is defined but never used.","'setImage' is assigned a value but never used."]