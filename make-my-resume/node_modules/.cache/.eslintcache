[{"D:\\resume-builder-app\\make-my-resume\\src\\index.js":"1","D:\\resume-builder-app\\make-my-resume\\src\\App.js":"2","D:\\resume-builder-app\\make-my-resume\\src\\components\\History\\History.jsx":"3","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\BuildResume.jsx":"4","D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\NavBar.jsx":"5","D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\SmallNav.jsx":"6","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\Home.jsx":"7","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\CvSlider.jsx":"8","D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\FooterWithSocialLinks.jsx":"9","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ColorPicker.jsx":"10","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\PersonalDetails.jsx":"11","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\ImageCropper.jsx":"12","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeOutput.jsx":"13","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ContextAPI.jsx":"14","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Location.jsx":"15","D:\\resume-builder-app\\make-my-resume\\src\\objects\\NewUserDetailsObject.js":"16","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\WorkExperience.jsx":"17","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Skills.jsx":"18","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Education.jsx":"19","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Projects.jsx":"20","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Certifications.jsx":"21","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Others.jsx":"22","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\CustomDetails.jsx":"23","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat1.jsx":"24"},{"size":363,"mtime":1693413965623,"results":"25","hashOfConfig":"26"},{"size":6440,"mtime":1694194945237,"results":"27","hashOfConfig":"26"},{"size":156,"mtime":1694142305631,"results":"28","hashOfConfig":"26"},{"size":4719,"mtime":1694629387622,"results":"29","hashOfConfig":"26"},{"size":1887,"mtime":1694141916904,"results":"30","hashOfConfig":"26"},{"size":1044,"mtime":1694141890822,"results":"31","hashOfConfig":"26"},{"size":1935,"mtime":1694142140459,"results":"32","hashOfConfig":"26"},{"size":1449,"mtime":1693413965623,"results":"33","hashOfConfig":"26"},{"size":8757,"mtime":1693413965623,"results":"34","hashOfConfig":"26"},{"size":1068,"mtime":1693415177781,"results":"35","hashOfConfig":"26"},{"size":3267,"mtime":1694194251115,"results":"36","hashOfConfig":"26"},{"size":698,"mtime":1693514803260,"results":"37","hashOfConfig":"26"},{"size":847,"mtime":1694620817199,"results":"38","hashOfConfig":"26"},{"size":153,"mtime":1693501170317,"results":"39","hashOfConfig":"26"},{"size":2557,"mtime":1694194209015,"results":"40","hashOfConfig":"26"},{"size":938,"mtime":1694624439178,"results":"41","hashOfConfig":"26"},{"size":3801,"mtime":1694194414970,"results":"42","hashOfConfig":"26"},{"size":2525,"mtime":1694194484660,"results":"43","hashOfConfig":"26"},{"size":5328,"mtime":1694624991767,"results":"44","hashOfConfig":"26"},{"size":4011,"mtime":1694194702311,"results":"45","hashOfConfig":"26"},{"size":3198,"mtime":1694194796805,"results":"46","hashOfConfig":"26"},{"size":8168,"mtime":1694195155866,"results":"47","hashOfConfig":"26"},{"size":3008,"mtime":1694195124896,"results":"48","hashOfConfig":"26"},{"size":9862,"mtime":1694629560228,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1v5yyw7",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"53"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"53"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"53"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"53"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\resume-builder-app\\make-my-resume\\src\\index.js",[],[],[],"D:\\resume-builder-app\\make-my-resume\\src\\App.js",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\History\\History.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\BuildResume.jsx",["131"],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\NavBar.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\NavBar\\SmallNav.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\Home.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\CvSlider.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Home\\FooterWithSocialLinks.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ColorPicker.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\PersonalDetails.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\ImageCropper.jsx",["132"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Avatar from \"react-avatar-edit\";\r\nimport UserContext from \"../ContextAPI\";\r\n\r\nconst ImageCropper = () => {\r\n  const [userImage, setUserImage] = useContext(UserContext);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const onClose = () => {\r\n    setPreview(null);\r\n  };\r\n  const onCrop = (view) => {\r\n    setPreview(view);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserImage(preview);\r\n    // Image decoder\r\n    //console.log(preview);\r\n  }, [setUserImage, preview]);\r\n\r\n  return (\r\n    <div>\r\n      <Avatar width={300} height={150} onCrop={onCrop} onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCropper;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeOutput.jsx",["133","134"],[],"import React, { useContext } from \"react\";\r\nimport UserContext from \"../ContextAPI\";\r\nimport ResumeFormat1 from \"./ResumeFormat1\";\r\n\r\nconst ResumeOutput = ({\r\n  personalDetails,\r\n  userLocation,\r\n  workExpList,\r\n  skills,\r\n  educationList,\r\n  projectsList,\r\n  certificationList,\r\n  languageList,\r\n  awardList,\r\n  hobbies,\r\n  newDetails,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ResumeFormat1\r\n        personalDetails={personalDetails}\r\n        userLocation={userLocation}\r\n        workExpList={workExpList}\r\n        skills={skills}\r\n        educationList={educationList}\r\n        projectsList={projectsList}\r\n        certificationList={certificationList}\r\n        languageList={languageList}\r\n        awardList={awardList}\r\n        hobbies={hobbies}\r\n        newDetails={newDetails}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeOutput;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ContextAPI.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Location.jsx",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\objects\\NewUserDetailsObject.js",[],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\WorkExperience.jsx",["135"],[],"import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { user_work_experience } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WorkExperience = ({\r\n  setWorkExperience,\r\n  workExperience,\r\n  workExpList,\r\n  setWorkExpList,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setWorkExperience((prev) => {\r\n      return { ...prev, [name]:value };\r\n    });\r\n  };\r\n\r\n  const handleExperienceInput = () => {\r\n    if (workExperience.company !== \"\" && workExperience.position !== \"\") {\r\n      setWorkExpList((prev) => {\r\n        return [...prev, workExperience];\r\n      });\r\n      setWorkExperience(user_work_experience);\r\n    }\r\n  };\r\n\r\n  const deleteWorkExperience = (index) => {\r\n    let newList = workExpList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setWorkExpList(newList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"flex flex-col items-center justify-center p-2 lg:p-8\">\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex gap-3 mb-3\">\r\n            <TextField\r\n              value={workExperience.company}\r\n              name=\"company\"\r\n              required\r\n              label=\"Company Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={workExperience.position}\r\n              name=\"position\"\r\n              required\r\n              label=\"Position\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            value={workExperience.job_summery}\r\n            name=\"job_summery\"\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Job Summery including start and end date\"\r\n            multiline\r\n            rows={2}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button\r\n            onClick={handleExperienceInput}\r\n            className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n          >\r\n            Add New Experience\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Work Experiences\r\n        </p>\r\n        {workExpList.map((workExp, index) => (\r\n          <div key={index} className=\"relative border border-amber-400 px-14 py-4 rounded m-1\">\r\n            <p>{workExp.company}</p>\r\n            <div\r\n              className=\"absolute top-1 right-1 cursor-pointer w-5\"\r\n              onClick={() => deleteWorkExperience(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-4 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/location\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/skills\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkExperience;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Skills.jsx",["136"],[],"import React, { useState } from 'react'\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Skills = ({skills, setSkills}) => {\r\n    const [mySkill, setMySkill] = useState(\"\");\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setSkills((prev) => [...prev, mySkill]);\r\n        setMySkill(\"\");\r\n    }\r\n\r\n    const deleteSkills = (index) => {\r\n        let newList = skills.filter((element, i) => {\r\n          if (i !== index) {\r\n            return element;\r\n          }\r\n        });\r\n        setSkills(newList);\r\n      };\r\n  return (\r\n    <>\r\n    <div className='px-2 lg:px-4 flex flex-col lg:mt-8'>\r\n      <TextField\r\n            value={mySkill || \"\"}\r\n            fullWidth\r\n            required\r\n            label=\"Skill\"\r\n            id=\"outlined-size-medium\"\r\n            size=\"medium\"\r\n            onChange={(e) => setMySkill(e.target.value)}\r\n          />\r\n        <button onClick={handleClick} className='align-right mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500'>Add Skill</button>\r\n    </div>\r\n    <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          My Skills\r\n        </p>\r\n        {skills.map((skill, index) => (\r\n          <div key={index} className=\"border border-amber-400 rounded m-1 flex items-center justify-between gap-4 px-4 py-2\">\r\n            <p>{skill}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteSkills(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/work-experience\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/education\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Education.jsx",["137"],[],"D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Projects.jsx",["138"],[],"import React, { useState } from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport { project_details } from '../../../objects/NewUserDetailsObject';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Projects = ({ projectsList, setProjectsList }) => {\r\n    const [project, setProject] = useState(() => project_details);\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setProject((prev) =>{ \r\n            return {...prev, [name]:value}\r\n        });\r\n    }\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setProjectsList((prev) => [...prev, project]);\r\n        setProject(project_details);\r\n    }\r\n    const deleteProject = (index) => {\r\n        let newList = projectsList.filter((element, i) => {\r\n            if(i !== index) {\r\n                return element;\r\n            }\r\n        })\r\n        setProjectsList(newList);\r\n    }\r\n  return (\r\n    <div className='flex flex-col items-center justify-center'>\r\n       <form className=\"p-2 lg:p-8\">\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"w-full flex justify-between gap-2 mb-3 mt-3\">\r\n            <TextField\r\n              value={project.name}\r\n              name=\"name\"\r\n              label=\"Project Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"medium\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={project.description}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"medium\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n         <div className=\"flex flex-col w-full gap-3 mb-3 mt-3\">\r\n         <TextField\r\n            value={project.website}\r\n            name=\"website\"\r\n            fullWidth\r\n            label=\"Website/Github Link\"\r\n            id=\"outlined-size-medium\"\r\n            size=\"medium\"\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            value={project.summery}\r\n            name=\"summery\"\r\n            fullWidth\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Project summery\"\r\n            multiline\r\n            rows={3}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button\r\n            onClick={handleClick}\r\n            className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n          >\r\n            Add New Project\r\n          </button>\r\n         </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Projects\r\n        </p>\r\n\r\n        {projectsList.map((project, index) => (\r\n          <div key={index} className=\"relative border border-amber-400 px-14 py-4 rounded m-1\">\r\n            <p>{project.name}</p>\r\n            <div\r\n              className=\"absolute top-1 right-1 cursor-pointer w-5\"\r\n              onClick={() => deleteProject(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/education\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/certifications\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Certifications.jsx",["139"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { user_certificate } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Certifications = ({certificationList, setCertificationList}) => {\r\n  const [myCertificate, setMyCertificate] = useState(() => user_certificate)\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setMyCertificate((prev) => {\r\n      return {...prev, [name]:value};\r\n    })\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setCertificationList((prev) => [...prev, myCertificate]);\r\n    setMyCertificate(user_certificate);\r\n  };\r\n\r\n  const deleteSkills = (index) => {\r\n      let newList = certificationList.filter( function (element, i) {\r\n          if(i !== index) {\r\n            return element;\r\n          }\r\n      })\r\n      setCertificationList(newList);\r\n  }\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center gap-4 p-4 lg:p-8 max-lg:mt-2\">\r\n      <TextField\r\n        fullWidth\r\n        value={myCertificate.name}\r\n        name=\"name\"\r\n        label=\"Certificate Name\"\r\n        id=\"outlined-size-medium\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        value={myCertificate.description}\r\n        name=\"description\"\r\n        label=\"Description\"\r\n        id=\"outlined-size-medium\"\r\n        multiline\r\n        rows={3}\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button\r\n        onClick={handleClick}\r\n        className=\"align-right mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n      >\r\n        Add Certificate\r\n      </button>\r\n\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n          Certificates\r\n        </p>\r\n        {certificationList.map((certificate, index) => (\r\n          <div key={index} className=\"border border-amber-400 rounded m-1 flex items-center justify-between gap-4 px-4 py-2\">\r\n            <p>{certificate.name}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteSkills(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/projects\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/others\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\Others.jsx",["140","141","142"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { user_language, user_award } from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Others = ({ languageList, setLanguageList, awardList, setAwardList, hobbies, setHobbies }) => {\r\n  const [language, setLanguage] = useState(user_language);\r\n  const [award, setAward] = useState(user_award);\r\n  const [userHobby, setUserHobby] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLanguage((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n\r\n    setAward((prev) => {\r\n      return {...prev, [name]:value}\r\n    });\r\n  };\r\n  const handleLanguage = (e) => {\r\n    e.preventDefault();\r\n    setLanguageList((prev) => [...prev, language]);\r\n    setLanguage(user_language);\r\n  };\r\n  const deleteLanguage = (index) => {\r\n    let newList = languageList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setLanguageList(newList);\r\n  };\r\n\r\n  const handleAwards = (e) => {\r\n    e.preventDefault();\r\n    setAwardList((prev) => [...prev, award]);\r\n    setAward(user_award);\r\n  }\r\n  const deleteAward = (index) => {\r\n    let newList = awardList.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setAwardList(newList);\r\n  }\r\n\r\n  const handleHobbies = (e) => {\r\n    e.preventDefault();\r\n    setHobbies((prev) => [...prev, userHobby]);\r\n    setUserHobby(\"\");\r\n  }\r\n\r\n  const deleteHobby = (index) => {\r\n    let newList = hobbies.filter((element, i) => {\r\n      if (i !== index) {\r\n        return element;\r\n      }\r\n    });\r\n    setHobbies(newList);\r\n  }\r\n  return (\r\n    <div className=\"p-2 max-lg:m-2 lg:p-8\">\r\n      <div>\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Languages\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex w-full items-center justify-between gap-3\">\r\n            <TextField\r\n              value={language.name}\r\n              name=\"name\"\r\n              required\r\n              label=\"Language Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={language.level}\r\n              name=\"level\"\r\n              required\r\n              label=\"Level Out Of 10\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleLanguage}\r\n            className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n          >\r\n            Add New Language\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {languageList.map((language, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-amber-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{language.name}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteLanguage(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 lg:mt-6\">\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Awards\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n          <div className=\"flex flex-col w-full items-center justify-center gap-3\">\r\n            <TextField\r\n              value={award.award_name}\r\n              name=\"award_name\"\r\n              required\r\n              fullWidth\r\n              label=\"Award Name\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              value={award.description}\r\n              name=\"description\"\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={2}\r\n              label=\"Description\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleAwards}\r\n            className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n          >\r\n            Add New Experience\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {awardList.map((award, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-amber-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{award.award_name}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteAward(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 lg:mt-6\">\r\n        <p className=\"font-semibold border rounded py-1 mb-4 border-gray-400 text-xl font-sans text-center\">\r\n          Hobbies and Interests\r\n        </p>\r\n        <form className=\"flex flex-col items-center justify-center\">\r\n            <TextField\r\n              value={userHobby}\r\n              required\r\n              fullWidth\r\n              label=\"Hobby or Intrest\"\r\n              id=\"outlined-size-medium\"\r\n              size=\"small\"\r\n              onChange={(e) => setUserHobby(e.target.value)}\r\n            />\r\n          <button\r\n            onClick={handleHobbies}\r\n            className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n          >\r\n            Add New Hobby\r\n          </button>\r\n        </form>\r\n        <div className=\"flex flex-wrap w-full items-center justify-center gap-2 p-2 mt-2 lg:mt-4\">\r\n          {hobbies.map((hobby, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"border border-amber-400 px-2 py-1 gap-4 rounded m-1 flex items-center justify-center\"\r\n            >\r\n              <p>{hobby}</p>\r\n              <div\r\n                className=\"cursor-pointer w-5\"\r\n                onClick={() => deleteHobby(index)}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full mt-2 flex items-center justify-between px-2 lg:px-4\">\r\n          <Link\r\n            to={\"/build/certifications\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n          <Link\r\n            to={\"/build/custom-details\"}\r\n            className=\"bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Next\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Others;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\Input\\CustomDetails.jsx",["143"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {new_details} from \"../../../objects/NewUserDetailsObject\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomDetails = ({ newDetails, setNewDetails }) => {\r\n  const [details, setDetails] = useState(new_details);\r\n  const handleChange = (e) => {\r\n     const {name, value} = e.target;\r\n     setDetails((prev) => {\r\n        return {...prev, [name]:value};\r\n     })\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setNewDetails((prev) => [...prev, details]);\r\n    setDetails(new_details);\r\n  };\r\n\r\n  const deleteDetails = (index) => {\r\n    let newList = newDetails.filter((element, i) => {\r\n       if(i !== index) {\r\n          return element;\r\n       }\r\n    });\r\n    setNewDetails(newList);\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 lg:p-8\">\r\n      <form className=\"w-full flex gap-3 flex-col items-center justify-center\">\r\n        <TextField\r\n          required\r\n          value={details.title}\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          id=\"outlined-size-medium\"\r\n          size=\"medium\"\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          value={details.description}\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          id=\"outlined-size-medium\"\r\n          size=\"medium\"\r\n          multiline\r\n          rows={2}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          onClick={handleClick}\r\n          className=\"mt-4 text-center bg-amber-400 py-2 px-4 rounded-lg font-semibold text-base hover:bg-amber-500\"\r\n        >\r\n          Add Details\r\n        </button>\r\n      </form>\r\n      <div className=\"flex flex-col w-full items-center p-2 mt-2 lg:mt-4\">\r\n        <p className=\"font-semibold border-b-2 mb-2 text-lg border-gray-600\">\r\n           Other Details\r\n        </p>\r\n        {newDetails.map((details, index) => (\r\n          <div key={index} className=\"border mt-1 border-amber-400 px-4 py-2 rounded flex gap-4 items-center justify-center\">\r\n            <p>{details.title}</p>\r\n            <div\r\n              className=\"cursor-pointer w-5\"\r\n              onClick={() => deleteDetails(index)}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"relative w-full mt-2 flex items-center justify-between px-2 lg:px-10\">\r\n          <Link\r\n            to={\"/build/others\"}\r\n            className=\"absolute left-0 bg-amber-400 px-6 py-2 rounded hover:bg-amber-500 font-semibold\"\r\n          >\r\n            Prev\r\n          </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomDetails;\r\n","D:\\resume-builder-app\\make-my-resume\\src\\components\\Build\\ResumeDispaly\\ResumeFormat1.jsx",["144"],[],{"ruleId":"145","severity":1,"message":"146","line":20,"column":10,"nodeType":"147","messageId":"148","endLine":20,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":19},{"ruleId":"145","severity":1,"message":"150","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":27},{"ruleId":"145","severity":1,"message":"151","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":29,"column":51,"nodeType":"154","messageId":"155","endLine":29,"endColumn":53},{"ruleId":"152","severity":1,"message":"153","line":14,"column":50,"nodeType":"154","messageId":"155","endLine":14,"endColumn":52},{"ruleId":"152","severity":1,"message":"153","line":29,"column":62,"nodeType":"154","messageId":"155","endLine":29,"endColumn":64},{"ruleId":"152","severity":1,"message":"153","line":20,"column":56,"nodeType":"154","messageId":"155","endLine":20,"endColumn":58},{"ruleId":"152","severity":1,"message":"156","line":21,"column":47,"nodeType":"157","messageId":"155","endLine":21,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":26,"column":52,"nodeType":"154","messageId":"155","endLine":26,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":40,"column":49,"nodeType":"154","messageId":"155","endLine":40,"endColumn":51},{"ruleId":"152","severity":1,"message":"153","line":55,"column":47,"nodeType":"154","messageId":"155","endLine":55,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":21,"column":50,"nodeType":"154","messageId":"155","endLine":21,"endColumn":52},{"ruleId":"145","severity":1,"message":"158","line":17,"column":17,"nodeType":"147","messageId":"148","endLine":17,"endColumn":25},"no-unused-vars","'background' is assigned a value but never used.","Identifier","unusedVar","'userImage' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","'setImage' is assigned a value but never used."]